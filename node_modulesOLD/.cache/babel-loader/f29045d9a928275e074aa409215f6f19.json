{"ast":null,"code":"import _objectSpread from \"/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/**\n * Reducer for authentication.\n * \n * Responsible for updating our authentication status in the Redux state.\n */\nimport { reducerWithInitialState } from 'typescript-fsa-reducers/dist';\nimport * as actions from './actions';\nconst INITIAL_STATE = {\n  accessToken: undefined\n};\nexport const reducer = reducerWithInitialState(INITIAL_STATE)\n/* The user has been logged in: store the access token in the state. */\n.case(actions.loggedIn, (state, accessToken) => {\n  return _objectSpread({}, state, {\n    accessToken\n  });\n})\n/* The user has been logged out; remove our stored access token from the state. */\n.case(actions.loggedOut, state => {\n  return _objectSpread({}, state, {\n    accessToken: undefined\n  });\n}).case(actions.loginError, (state, error) => {\n  return _objectSpread({}, state, {\n    error: error\n  });\n}).case(actions.loginRequest, state => {\n  return _objectSpread({}, state, {\n    error: undefined\n  });\n});","map":{"version":3,"sources":["/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/auth/reducer.ts"],"names":["reducerWithInitialState","actions","INITIAL_STATE","accessToken","undefined","reducer","case","loggedIn","state","loggedOut","loginError","error","loginRequest"],"mappings":";;AAAA;;;;;AAMA,SAASA,uBAAT,QAAwC,8BAAxC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AASA,MAAMC,aAAyB,GAAG;AAC9BC,EAAAA,WAAW,EAAEC;AADiB,CAAlC;AAIA,OAAO,MAAMC,OAAO,GAAGL,uBAAuB,CAACE,aAAD;AAC1C;AADmB,CAElBI,IAFkB,CAEbL,OAAO,CAACM,QAFK,EAEK,CAACC,KAAD,EAAQL,WAAR,KAAwB;AAC5C,2BAAYK,KAAZ;AAAmBL,IAAAA;AAAnB;AACH,CAJkB;AAKnB;AALmB,CAMlBG,IANkB,CAMbL,OAAO,CAACQ,SANK,EAMOD,KAAD,IAAW;AAChC,2BAAYA,KAAZ;AAAmBL,IAAAA,WAAW,EAAEC;AAAhC;AACH,CARkB,EASlBE,IATkB,CASbL,OAAO,CAACS,UATK,EASO,CAACF,KAAD,EAAQG,KAAR,KAAkB;AACxC,2BAAYH,KAAZ;AAAmBG,IAAAA,KAAK,EAAEA;AAA1B;AACH,CAXkB,EAYlBL,IAZkB,CAYbL,OAAO,CAACW,YAZK,EAYUJ,KAAD,IAAW;AACnC,2BAAYA,KAAZ;AAAmBG,IAAAA,KAAK,EAAEP;AAA1B;AACH,CAdkB,CAAhB","sourcesContent":["/**\n * Reducer for authentication.\n * \n * Responsible for updating our authentication status in the Redux state.\n */\n\nimport { reducerWithInitialState } from 'typescript-fsa-reducers/dist';\nimport * as actions from './actions';\nimport { AccessToken } from './types';\n\n/** The store state for the auth module. */\nexport interface StoreState {\n    readonly accessToken?: AccessToken;\n    readonly error?: Error;\n}\n\nconst INITIAL_STATE: StoreState = {\n    accessToken: undefined,\n};\n\nexport const reducer = reducerWithInitialState(INITIAL_STATE)\n    /* The user has been logged in: store the access token in the state. */\n    .case(actions.loggedIn, (state, accessToken) => {\n        return { ...state, accessToken };\n    })\n    /* The user has been logged out; remove our stored access token from the state. */\n    .case(actions.loggedOut, (state) => {\n        return { ...state, accessToken: undefined };\n    })\n    .case(actions.loginError, (state, error) => {\n        return { ...state, error: error };\n    })\n    .case(actions.loginRequest, (state) => {\n        return { ...state, error: undefined };\n    })\n    ;\n"]},"metadata":{},"sourceType":"module"}