{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport * as Api from 'typescript-fetch-api';\nimport * as petstore from '../petstore/actions';\nconst pets = new Api.PetApi();\n\nfunction* handleAddPet(action) {\n  try {\n    let result = yield call(function () {\n      return pets.addPet({\n        body: action.payload\n      });\n    });\n    yield put(petstore.addPet.done({\n      params: action.payload,\n      result\n    }));\n  } catch (error) {\n    yield put(petstore.addPet.failed({\n      params: action.payload,\n      error\n    }));\n  }\n}\n\nfunction* handleRequestPets(action) {\n  try {\n    let result = yield call(() => {\n      return pets.findPetsByStatus({\n        status: ['available']\n      });\n    });\n    yield put(petstore.requestPets.done({\n      params: action.payload,\n      result\n    }));\n  } catch (error) {\n    yield put(petstore.requestPets.failed({\n      params: action.payload,\n      error\n    }));\n  }\n}\n\nexport default function* saga() {\n  yield takeEvery(petstore.addPet.started, handleAddPet);\n  yield takeEvery(petstore.requestPets.started, handleRequestPets);\n}","map":{"version":3,"sources":["/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/api/sagas.ts"],"names":["takeEvery","call","put","Api","petstore","pets","PetApi","handleAddPet","action","result","addPet","body","payload","done","params","error","failed","handleRequestPets","findPetsByStatus","status","requestPets","saga","started"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,OAAO,KAAKC,GAAZ,MAAqB,sBAArB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AAEA,MAAMC,IAAI,GAAG,IAAIF,GAAG,CAACG,MAAR,EAAb;;AAEA,UAAUC,YAAV,CAAuBC,MAAvB,EAAoE;AAChE,MAAI;AACA,QAAIC,MAAM,GAAG,MAAMR,IAAI,CAAC,YAAW;AAC/B,aAAOI,IAAI,CAACK,MAAL,CAAY;AAAEC,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAAf,OAAZ,CAAP;AACH,KAFsB,CAAvB;AAIA,UAAMV,GAAG,CAACE,QAAQ,CAACM,MAAT,CAAgBG,IAAhB,CAAqB;AAAEC,MAAAA,MAAM,EAAEN,MAAM,CAACI,OAAjB;AAA0BH,MAAAA;AAA1B,KAArB,CAAD,CAAT;AACH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACE,QAAQ,CAACM,MAAT,CAAgBM,MAAhB,CAAuB;AAAEF,MAAAA,MAAM,EAAEN,MAAM,CAACI,OAAjB;AAA0BG,MAAAA;AAA1B,KAAvB,CAAD,CAAT;AACH;AACJ;;AAED,UAAUE,iBAAV,CAA4BT,MAA5B,EAA8E;AAC1E,MAAI;AACA,QAAIC,MAAiB,GAAG,MAAMR,IAAI,CAAC,MAAM;AACrC,aAAOI,IAAI,CAACa,gBAAL,CAAsB;AAAEC,QAAAA,MAAM,EAAE,CAAC,WAAD;AAAV,OAAtB,CAAP;AACH,KAFiC,CAAlC;AAIA,UAAMjB,GAAG,CAACE,QAAQ,CAACgB,WAAT,CAAqBP,IAArB,CAA0B;AAAEC,MAAAA,MAAM,EAAEN,MAAM,CAACI,OAAjB;AAA0BH,MAAAA;AAA1B,KAA1B,CAAD,CAAT;AACH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACE,QAAQ,CAACgB,WAAT,CAAqBJ,MAArB,CAA4B;AAAEF,MAAAA,MAAM,EAAEN,MAAM,CAACI,OAAjB;AAA0BG,MAAAA;AAA1B,KAA5B,CAAD,CAAT;AACH;AACJ;;AAED,eAAe,UAAUM,IAAV,GAA+B;AAC1C,QAAMrB,SAAS,CAACI,QAAQ,CAACM,MAAT,CAAgBY,OAAjB,EAA0Bf,YAA1B,CAAf;AACA,QAAMP,SAAS,CAACI,QAAQ,CAACgB,WAAT,CAAqBE,OAAtB,EAA+BL,iBAA/B,CAAf;AACH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { SagaIterator } from 'redux-saga';\nimport * as Api from 'typescript-fetch-api';\n\nimport * as petstore from '../petstore/actions';\n\nconst pets = new Api.PetApi();\n\nfunction* handleAddPet(action: petstore.AddPetAction): SagaIterator {\n    try {\n        let result = yield call(function() {\n            return pets.addPet({ body: action.payload });\n        });\n\n        yield put(petstore.addPet.done({ params: action.payload, result }));\n    } catch (error) {\n        yield put(petstore.addPet.failed({ params: action.payload, error }));\n    }\n}\n\nfunction* handleRequestPets(action: petstore.RequestPetsAction): SagaIterator {\n    try {\n        let result: Api.Pet[] = yield call(() => {\n            return pets.findPetsByStatus({ status: ['available'] });\n        });\n\n        yield put(petstore.requestPets.done({ params: action.payload, result }));\n    } catch (error) {\n        yield put(petstore.requestPets.failed({ params: action.payload, error }));\n    }\n}\n\nexport default function* saga(): SagaIterator {\n    yield takeEvery(petstore.addPet.started, handleAddPet);\n    yield takeEvery(petstore.requestPets.started, handleRequestPets);\n}\n"]},"metadata":{},"sourceType":"module"}