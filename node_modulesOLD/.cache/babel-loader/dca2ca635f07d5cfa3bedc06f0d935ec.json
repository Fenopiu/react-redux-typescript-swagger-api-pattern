{"ast":null,"code":"/**\n * Container template for a component.\n */\n\n/* Import the component from the component path */\nimport Component from '../components/example';\nimport { connect } from 'react-redux';\n\n/* Import module actions */\nimport * as actions from '../actions';\n/**\n * Interface for properties that the container passes to the component.\n */\n\n/** Populate the Props from the store state. */\nconst mapStateToProps = state => {\n  return {\n    exampleProperty: state.template.name\n  };\n};\n/** Populate the Actions with the callbacks for the component. */\n\n\nconst mapDispatchToProps = dispatch => ({\n  onExample: value => {\n    dispatch(actions.examplePrimitiveAction(value));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","map":{"version":3,"sources":["/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/template/containers/example.ts"],"names":["Component","connect","actions","mapStateToProps","state","exampleProperty","template","name","mapDispatchToProps","dispatch","onExample","value","examplePrimitiveAction"],"mappings":"AAAA;;;;AAIC;AACD,OAAOA,SAAP,MAAsB,uBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAMA;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA;;;;AAeA;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAkC;AACtD,SAAO;AACHC,IAAAA,eAAe,EAAED,KAAK,CAACE,QAAN,CAAeC;AAD7B,GAAP;AAGH,CAJD;AAMA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAsC;AAC7DC,EAAAA,SAAS,EAAGC,KAAD,IAAW;AAClBF,IAAAA,QAAQ,CAACP,OAAO,CAACU,sBAAR,CAA+BD,KAA/B,CAAD,CAAR;AACH;AAH4D,CAAtC,CAA3B;;AAMA,eAAeV,OAAO,CAACE,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CR,SAA7C,CAAf","sourcesContent":["/**\n * Container template for a component.\n */\n\n /* Import the component from the component path */\nimport Component from '../components/example';\n\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\n/* Import RootStoreState */\nimport { RootStoreState } from '../../index';\n\n/* Import module actions */\nimport * as actions from '../actions';\n\n/**\n * Interface for properties that the container passes to the component.\n */\nexport interface Props {\n    exampleProperty: string;\n}\n\n/**\n * Interface for action callbacks that the container exposes to the component.\n * The component's `this.props` is typed `Props & Actions`.\n */\nexport interface Actions {\n    onExample: (value: string) => void;\n}\n\n/** Populate the Props from the store state. */\nconst mapStateToProps = (state: RootStoreState): Props => {\n    return {\n        exampleProperty: state.template.name,\n    };\n};\n\n/** Populate the Actions with the callbacks for the component. */\nconst mapDispatchToProps = (dispatch: Dispatch<{}>): Actions => ({\n    onExample: (value) => {\n        dispatch(actions.examplePrimitiveAction(value));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]},"metadata":{},"sourceType":"module"}