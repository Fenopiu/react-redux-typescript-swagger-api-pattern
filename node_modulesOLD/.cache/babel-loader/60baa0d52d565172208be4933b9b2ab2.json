{"ast":null,"code":"var _jsxFileName = \"/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/petstore/components/Petstore.tsx\";\n\n/**\n * Component template.\n * \n * Note that this file has a `.tsx` suffix, as it contains React elements.\n */\nimport * as React from 'react';\n\n/**\n * The initial state for our internal component state.\n */\nconst INITIAL_STATE = {};\nexport default class Example extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = INITIAL_STATE;\n\n    this.addPet = () => {\n      this.props.onAddPet('test');\n    };\n  }\n\n  componentDidMount() {\n    // TODO this is run before rehydrate\n    this.props.loadPets();\n  }\n\n  render() {\n    const pets = this.props.pets;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Petstore\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.loadPets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Reload\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: this.addPet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Add Pet\"), this.props.saving && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Saving\\u2026\")), this.props.error && React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.error.message), !!pets.length && React.createElement(\"table\", {\n      style: {\n        margin: '0 auto',\n        width: '60%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Pet\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Status\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, pets.filter((pet, index) => index < 20).map((pet, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, pet.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, pet.status))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/petstore/components/Petstore.tsx"],"names":["React","INITIAL_STATE","Example","Component","state","addPet","props","onAddPet","componentDidMount","loadPets","render","pets","saving","error","color","message","length","margin","width","filter","pet","index","map","name","status"],"mappings":";;AAAA;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAUA;;;AAGA,MAAMC,aAAoB,GAAG,EAA7B;AAIA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAA8D;AAAA;AAAA;AAAA,SAEzEC,KAFyE,GAEjEH,aAFiE;;AAAA,SAIzEI,MAJyE,GAIhE,MAAM;AACX,WAAKC,KAAL,CAAWC,QAAX,CAAoB,MAApB;AACH,KANwE;AAAA;;AAQzEC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKF,KAAL,CAAWG,QAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,IADH,GACY,KAAKL,KADjB,CACGK,IADH;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWG,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,UAGI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAIK,KAAKC,KAAL,CAAWM,MAAX,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALR,CAFJ,EAUK,KAAKN,KAAL,CAAWO,KAAX,IACG;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKR,KAAL,CAAWO,KAAX,CAAiBE,OAA5C,CAXR,EAaK,CAAC,CAACJ,IAAI,CAACK,MAAP,IACG;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,IAAI,CAACQ,MAAL,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgBA,KAAK,GAAG,EAApC,EACIC,GADJ,CACQ,CAACF,GAAD,EAAMC,KAAN,KACL;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACG,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,GAAG,CAACI,MAAT,CAFJ,CAFH,CADL,CAPJ,CAdR,CADJ;AAmCH;;AAnDwE","sourcesContent":["/**\n * Component template.\n * \n * Note that this file has a `.tsx` suffix, as it contains React elements.\n */\n\nimport * as React from 'react';\nimport { Props, Actions } from '../containers/Petstore';\n\n/**\n * Interface for private internal component state.\n */\ninterface State {\n    \n}\n\n/**\n * The initial state for our internal component state.\n */\nconst INITIAL_STATE: State = {\n    \n};\n\nexport default class Example extends React.Component<Props & Actions, State> {\n\n    state = INITIAL_STATE;\n\n    addPet = () => {\n        this.props.onAddPet('test');\n    }\n\n    componentDidMount() {\n        // TODO this is run before rehydrate\n        this.props.loadPets();\n    }\n\n    render() {\n        const { pets } = this.props;\n\n        return (\n            <div>\n                <h1>Petstore</h1>\n                <p>\n                    <button onClick={this.props.loadPets}>Reload</button>\n                    &nbsp;\n                    <button onClick={this.addPet}>Add Pet</button>\n                    {this.props.saving && (\n                        <span>Saving&hellip;</span>\n                    )}\n                </p>\n                {this.props.error && (\n                    <p style={{color: 'red'}}>{this.props.error.message}</p>\n                )}\n                {!!pets.length && (\n                    <table style={{margin: '0 auto', width: '60%'}}>\n                        <thead>\n                            <tr>\n                                <th>Pet</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {pets.filter((pet, index) => index < 20)\n                                .map((pet, index) => \n                                <tr key={index}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.status}</td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}