{"ast":null,"code":"/**\n * Container template for a component.\n */\n\n/* Import the component from the component path */\nimport Component from '../components/Petstore';\nimport { connect } from 'react-redux';\n/* Import RootStoreState */\n\n/* Import module files */\nimport * as actions from '../actions';\n\n/** Populate the Props from the store state. */\nconst mapStateToProps = ({\n  petstore\n}) => {\n  return {\n    pets: petstore.pets,\n    saving: petstore.saving,\n    error: petstore.error\n  };\n};\n/** Populate the Actions with the callbacks for the component. */\n\n\nconst mapDispatchToProps = dispatch => ({\n  loadPets: () => {\n    dispatch(actions.requestPets.started(undefined));\n  },\n  onAddPet: name => {\n    dispatch(actions.addPet.started({\n      name,\n      photoUrls: ['']\n    }));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","map":{"version":3,"sources":["/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/petstore/containers/Petstore.ts"],"names":["Component","connect","actions","mapStateToProps","petstore","pets","saving","error","mapDispatchToProps","dispatch","loadPets","requestPets","started","undefined","onAddPet","name","addPet","photoUrls"],"mappings":"AAAA;;;;AAIC;AACD,OAAOA,SAAP,MAAsB,wBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA;;AAGA;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;AAqBA;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AAC7D,SAAO;AACHC,IAAAA,IAAI,EAAED,QAAQ,CAACC,IADZ;AAEHC,IAAAA,MAAM,EAAEF,QAAQ,CAACE,MAFd;AAGHC,IAAAA,KAAK,EAAEH,QAAQ,CAACG;AAHb,GAAP;AAKH,CAND;AAQA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAA6B;AACpDC,EAAAA,QAAQ,EAAE,MAAM;AACZD,IAAAA,QAAQ,CAACP,OAAO,CAACS,WAAR,CAAoBC,OAApB,CAA4BC,SAA5B,CAAD,CAAR;AACH,GAHmD;AAIpDC,EAAAA,QAAQ,EAAGC,IAAD,IAAU;AAChBN,IAAAA,QAAQ,CAACP,OAAO,CAACc,MAAR,CAAeJ,OAAf,CAAuB;AAC5BG,MAAAA,IAD4B;AAE5BE,MAAAA,SAAS,EAAE,CAAC,EAAD;AAFiB,KAAvB,CAAD,CAAR;AAIH;AATmD,CAA7B,CAA3B;;AAYA,eAAehB,OAAO,CAACE,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CR,SAA7C,CAAf","sourcesContent":["/**\n * Container template for a component.\n */\n\n /* Import the component from the component path */\nimport Component from '../components/Petstore';\n\nimport { connect } from 'react-redux';\n\n/* Import RootStoreState */\nimport { RootStoreState } from '../../index';\n\n/* Import module files */\nimport * as actions from '../actions';\nimport { Pet } from '../types';\n\n/**\n * Interface for properties that the container passes to the component.\n */\nexport interface Props {\n    pets: ReadonlyArray<Pet>;\n    saving: boolean;\n    error?: Error;\n}\n\n/**\n * Interface for action callbacks that the container exposes to the component.\n * The component's `this.props` is typed `Props & Actions`.\n */\nexport interface Actions {\n    loadPets: () => void;\n    onAddPet: (name: string) => void;\n}\n\n/** Populate the Props from the store state. */\nconst mapStateToProps = ({ petstore }: RootStoreState): Props => {\n    return {\n        pets: petstore.pets,\n        saving: petstore.saving,\n        error: petstore.error,\n    };\n};\n\n/** Populate the Actions with the callbacks for the component. */\nconst mapDispatchToProps = (dispatch: any): Actions => ({\n    loadPets: () => {\n        dispatch(actions.requestPets.started(undefined));\n    },\n    onAddPet: (name) => {\n        dispatch(actions.addPet.started({\n            name,\n            photoUrls: [''],\n        }));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]},"metadata":{},"sourceType":"module"}