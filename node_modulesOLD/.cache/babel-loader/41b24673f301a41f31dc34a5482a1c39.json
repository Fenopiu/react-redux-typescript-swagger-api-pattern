{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isType(action, actionCreator) {\n  return action.type === actionCreator.type;\n}\n\nexports.isType = isType;\n\nfunction actionCreatorFactory(prefix, defaultIsError) {\n  if (defaultIsError === void 0) {\n    defaultIsError = function (p) {\n      return p instanceof Error;\n    };\n  }\n\n  var actionTypes = {};\n  var base = prefix ? prefix + \"/\" : \"\";\n\n  function actionCreator(type, commonMeta, isError) {\n    if (isError === void 0) {\n      isError = defaultIsError;\n    }\n\n    var fullType = base + type;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (actionTypes[fullType]) throw new Error(\"Duplicate action type: \" + fullType);\n      actionTypes[fullType] = true;\n    }\n\n    return Object.assign(function (payload, meta) {\n      var action = {\n        type: fullType,\n        payload: payload\n      };\n\n      if (commonMeta || meta) {\n        action.meta = Object.assign({}, commonMeta, meta);\n      }\n\n      if (isError && (typeof isError === 'boolean' || isError(payload))) {\n        action.error = true;\n      }\n\n      return action;\n    }, {\n      type: fullType,\n      toString: function () {\n        return fullType;\n      },\n      match: function (action) {\n        return action.type === fullType;\n      }\n    });\n  }\n\n  function asyncActionCreators(type, commonMeta) {\n    return {\n      type: base + type,\n      started: actionCreator(type + \"_STARTED\", commonMeta, false),\n      done: actionCreator(type + \"_DONE\", commonMeta, false),\n      failed: actionCreator(type + \"_FAILED\", commonMeta, true)\n    };\n  }\n\n  return Object.assign(actionCreator, {\n    async: asyncActionCreators\n  });\n}\n\nexports.actionCreatorFactory = actionCreatorFactory;\nexports.default = actionCreatorFactory;","map":null,"metadata":{},"sourceType":"script"}