{"ast":null,"code":"/**\n * Container template for a component.\n */\n\n/* Import the component from the component path */\nimport Component from '../components/Login';\nimport { connect } from 'react-redux';\n/* Import RootStoreState */\n\n/* Import module files */\nimport * as actions from '../actions';\nimport { accessTokenSelector } from '../selectors';\n/**\n * Interface for properties that the container passes to the component.\n */\n\n/** Populate the Props from the store state. */\nconst mapStateToProps = state => {\n  return {\n    loggedIn: accessTokenSelector(state) !== undefined,\n    error: state.auth.error\n  };\n};\n/** Populate the Actions with the callbacks for the component. */\n\n\nconst mapDispatchToProps = dispatch => ({\n  onLogin: (username, password) => {\n    dispatch(actions.loginRequest({\n      username,\n      password\n    }));\n  },\n  onLogout: () => {\n    dispatch(actions.logoutRequest());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);","map":{"version":3,"sources":["/Users/luca/Documents/GitHub/react-redux-typescript-swagger-api-pattern/src/modules/auth/containers/Login.ts"],"names":["Component","connect","actions","accessTokenSelector","mapStateToProps","state","loggedIn","undefined","error","auth","mapDispatchToProps","dispatch","onLogin","username","password","loginRequest","onLogout","logoutRequest"],"mappings":"AAAA;;;;AAIC;AACD,OAAOA,SAAP,MAAsB,qBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA;;AAGA;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,mBAAT,QAAoC,cAApC;AAEA;;;;AAiBA;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAkC;AACtD,SAAO;AACHC,IAAAA,QAAQ,EAAEH,mBAAmB,CAACE,KAAD,CAAnB,KAA+BE,SADtC;AAEHC,IAAAA,KAAK,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAFf,GAAP;AAIH,CALD;AAOA;;;AACA,MAAME,kBAAkB,GAAIC,QAAD,KAA6B;AACpDC,EAAAA,OAAO,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7BH,IAAAA,QAAQ,CAACT,OAAO,CAACa,YAAR,CAAqB;AAAEF,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAArB,CAAD,CAAR;AACH,GAHmD;AAIpDE,EAAAA,QAAQ,EAAE,MAAM;AACZL,IAAAA,QAAQ,CAACT,OAAO,CAACe,aAAR,EAAD,CAAR;AACH;AANmD,CAA7B,CAA3B;;AASA,eAAehB,OAAO,CAACG,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CV,SAA7C,CAAf","sourcesContent":["/**\n * Container template for a component.\n */\n\n /* Import the component from the component path */\nimport Component from '../components/Login';\n\nimport { connect } from 'react-redux';\n\n/* Import RootStoreState */\nimport { RootStoreState } from '../../index';\n\n/* Import module files */\nimport * as actions from '../actions';\nimport { accessTokenSelector } from '../selectors';\n\n/**\n * Interface for properties that the container passes to the component.\n */\nexport interface Props {\n    loggedIn: boolean;\n    error?: Error;\n}\n\n/**\n * Interface for action callbacks that the container exposes to the component.\n * The component's `this.props` is typed `Props & Actions`.\n */\nexport interface Actions {\n    onLogin: (username: string, password: string) => void;\n    onLogout: () => void;\n}\n\n/** Populate the Props from the store state. */\nconst mapStateToProps = (state: RootStoreState): Props => {\n    return {\n        loggedIn: accessTokenSelector(state) !== undefined,\n        error: state.auth.error,\n    };\n};\n\n/** Populate the Actions with the callbacks for the component. */\nconst mapDispatchToProps = (dispatch: any): Actions => ({\n    onLogin: (username, password) => {\n        dispatch(actions.loginRequest({ username, password }));\n    },\n    onLogout: () => {\n        dispatch(actions.logoutRequest());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]},"metadata":{},"sourceType":"module"}